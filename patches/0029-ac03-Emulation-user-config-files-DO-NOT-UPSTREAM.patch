From 49f9cddacd1a9972484fc7ecd7dff519203ded60 Mon Sep 17 00:00:00 2001
From: Daniel Goehring <dgoehrin@os.amperecomputing.com>
Date: Thu, 28 Jan 2021 16:43:45 -0500
Subject: [PATCH 29/32] ac03: Emulation user config files [DO NOT UPSTREAM]

AmpereOne 1P and 2P user config files for emulation

Change-Id: Ice91fa808f2d9983723a6a2f50ab642002ad3ed3
Signed-off-by: Daniel Goehring <dgoehrin@os.amperecomputing.com>
---
 tcl/openocd.ac03_1s_pal.cfg | 121 +++++++++++++++++++++++++++++++++
 tcl/openocd.ac03_2s_pal.cfg | 130 ++++++++++++++++++++++++++++++++++++
 2 files changed, 251 insertions(+)
 create mode 100644 tcl/openocd.ac03_1s_pal.cfg
 create mode 100644 tcl/openocd.ac03_2s_pal.cfg

diff --git a/tcl/openocd.ac03_1s_pal.cfg b/tcl/openocd.ac03_1s_pal.cfg
new file mode 100644
index 000000000..38238f2f6
--- /dev/null
+++ b/tcl/openocd.ac03_1s_pal.cfg
@@ -0,0 +1,121 @@
+# SPDX-License-Identifier: GPL-2.0-or-later
+#
+# Example OpenOCD user configuration for the AmpereOne
+# Development Platform
+#
+# Copyright (c) 2021-2022, Ampere Computing LLC
+#
+
+# Command Line Argument Description
+#
+# VDEBUGPORT
+# Set the Cadence Virtual Debug JTAG server port assigned to the
+# emulator BFM transactor
+# Example syntax to attach to virtual debug port 8192
+# Syntax: -c "set VDEBUGPORT {8192}"
+#
+# JTAGFREQ
+# Override the default JTAG clock frequency
+# If not specified, defaults to "50000" kHz
+# Syntax: -c "set JTAGFREQ {50000}"
+#
+# Life-Cycle State (LCS)
+# If not specified, defaults to "Secure LCS"
+# LCS=0, "Secure LCS"
+# LCS=1, "Chip Manufacturing LCS"
+# Syntax: -c "set LCS {0}"
+# Syntax: -c "set LCS {1}"
+#
+# CORELIST_S0
+# Specify available physical cores by number
+# Example syntax to attach to physical cores 16, 17, 94, 95, 128 and 129 for S0
+# Syntax: -c "set CORELIST_S0 {16 17 94 95 128 129}"
+#
+# COREMASK_S0_0
+# Specify available physical cores 0-63 by mask
+# Example syntax to attach to physical cores 16 and 17 for S0
+# Syntax: -c "set COREMASK_S0_0 {0x0000000000030000}"
+#
+# COREMASK_S0_1
+# Specify available physical cores 64-127 by mask
+# Example syntax to attach to physical cores 94 and 95 for S0
+# Syntax: -c "set COREMASK_S0_1 {0x00000000C0000000}"
+#
+# COREMASK_S0_2
+# Specify available physical cores 128 and above by mask
+# Example syntax to attach to physical cores 128 and 129 for S0
+# Syntax: -c "set COREMASK_S0_2 {0x0000000000000003}"
+
+# Operating System Environment Variable Overrides
+#
+# OCD_GDB_PORT
+# Specify OpenOCD's GDB port
+# csh:  setenv OCD_GDB_PORT 3333
+# bash: export OCD_GDB_PORT=3333
+#
+# OCD_TELNET_PORT
+# Specify OpenOCD's Telnet port
+# csh:  setenv OCD_TELNET_PORT 4444
+# bash: export OCD_TELNET_PORT=4444
+#
+# OCD_TCL_PORT
+# Specify OpenOCD's TCL port
+# csh:  setenv OCD_TCL_PORT 6666
+# bash: export OCD_TCL_PORT=6666
+#
+# OCD_VDEBUG_PORT
+# Specify OpenOCD's Virtual Debug port
+# csh:  setenv OCD_VDEBUG_PORT 5555
+# bash: export OCD_VDEBUG_PORT=5555
+#
+# VD_GTLCFG
+# Override the default bfm_path if necessary
+# csh:  setenv VD_GTLCFG Top.siryn_tb.emu_dap_wrapper.vd_jtag_bfm_t32
+# bash: export VD_GTLCFG=Top.siryn_tb.emu_dap_wrapper.vd_jtag_bfm_t32
+
+bindto 0.0.0.0
+#debug_level 3
+
+if { [info exists env(OCD_GDB_PORT)] } {
+	gdb_port $::env(OCD_GDB_PORT)
+}
+
+if { [info exists env(OCD_TELNET_PORT)] } {
+	telnet_port $::env(OCD_TELNET_PORT)
+}
+
+if { [info exists env(OCD_TCL_PORT)] } {
+	tcl_port $::env(OCD_TCL_PORT)
+}
+
+if { [info exists env(OCD_VDEBUG_PORT)] } {
+	set VDEBUGPORT $::env(OCD_VDEBUG_PORT)
+}
+
+#
+# Interface Configuration
+#
+
+if { ![info exists VDEBUGPORT] } {
+	echo "ERROR: VDEBUGPORT must be specified"
+	shutdown
+}
+
+source [find interface/vdebug.cfg]
+
+# BFM hierarchical path and input clk period
+if { ![info exists env(VD_GTLCFG)] } {
+	vdebug bfm_path Top.siryn_tb.emu_dap_wrapper.vd_jtag_bfm_t32 295ps
+} else {
+	vdebug bfm_path $::env(VD_GTLCFG) 295ps
+}
+
+#
+# Board (Platform) Configuration
+#
+
+if { ![info exists JTAGFREQ] } {
+	set JTAGFREQ 50000
+}
+
+source [find board/ampere_ac03_1s.cfg]
diff --git a/tcl/openocd.ac03_2s_pal.cfg b/tcl/openocd.ac03_2s_pal.cfg
new file mode 100644
index 000000000..4fb9a6de2
--- /dev/null
+++ b/tcl/openocd.ac03_2s_pal.cfg
@@ -0,0 +1,130 @@
+# SPDX-License-Identifier: GPL-2.0-or-later
+#
+# Example OpenOCD user configuration for the AmpereOne
+# Development Platform
+#
+# Copyright (c) 2021-2022, Ampere Computing LLC
+#
+
+# Command Line Argument Description
+#
+# VDEBUGPORT
+# Set the Cadence Virtual Debug JTAG server port assigned to the
+# emulator BFM transactor
+# Example syntax to attach to virtual debug port 8192
+# Syntax: -c "set VDEBUGPORT {8192}"
+#
+# JTAGFREQ
+# Override the default JTAG clock frequency
+# If not specified, defaults to "50000" kHz
+# Syntax: -c "set JTAGFREQ {50000}"
+#
+# Life-Cycle State (LCS)
+# If not specified, defaults to "Secure LCS"
+# LCS=0, "Secure LCS"
+# LCS=1, "Chip Manufacturing LCS"
+# Syntax: -c "set LCS {0}"
+# Syntax: -c "set LCS {1}"
+#
+# CORELIST_S0, CORELIST_S1
+# Specify available physical cores by number
+# Example syntax to attach to physical cores 16, 17, 94, 95, 128 and 129 for S0 and S1
+# Syntax: -c "set CORELIST_S0 {16 17 94 95 128 129}"
+# Syntax: -c "set CORELIST_S1 {16 17 94 95 128 129}"
+#
+# COREMASK_S0_0, COREMASK_S1_0
+# Specify available physical cores 0-63 by mask
+# Example syntax to attach to physical cores 16 and 17 for S0 and S1
+# Syntax: -c "set COREMASK_S0_0 {0x0000000000030000}"
+# Syntax: -c "set COREMASK_S1_0 {0x0000000000030000}"
+#
+# COREMASK_S0_1, COREMASK_S1_1
+# Specify available physical cores 64-127 by mask
+# Example syntax to attach to physical cores 94 and 95 for S0 and S1
+# Syntax: -c "set COREMASK_S0_1 {0x00000000C0000000}"
+# Syntax: -c "set COREMASK_S1_1 {0x00000000C0000000}"
+#
+# COREMASK_S0_2, COREMASK_S1_2
+# Specify available physical cores 128 and above by mask
+# Example syntax to attach to physical cores 128 and 129 for S0 and S1
+# Syntax: -c "set COREMASK_S0_2 {0x0000000000000003}"
+# Syntax: -c "set COREMASK_S1_2 {0x0000000000000003}"
+#
+# SPLITSMP
+# Group all ARMv8 cores per socket into individual SMP sessions
+# If not specified, group ARMv8 cores from both sockets into one SMP session
+# Syntax: -c "set SPLITSMP {}"
+
+# Operating System Environment Variable Overrides
+#
+# OCD_GDB_PORT
+# Specify OpenOCD's GDB port
+# csh:  setenv OCD_GDB_PORT 3333
+# bash: export OCD_GDB_PORT=3333
+#
+# OCD_TELNET_PORT
+# Specify OpenOCD's Telnet port
+# csh:  setenv OCD_TELNET_PORT 4444
+# bash: export OCD_TELNET_PORT=4444
+#
+# OCD_TCL_PORT
+# Specify OpenOCD's TCL port
+# csh:  setenv OCD_TCL_PORT 6666
+# bash: export OCD_TCL_PORT=6666
+#
+# OCD_VDEBUG_PORT
+# Specify OpenOCD's Virtual Debug port
+# csh:  setenv OCD_VDEBUG_PORT 5555
+# bash: export OCD_VDEBUG_PORT=5555
+#
+# VD_GTLCFG
+# Override the default bfm_path if necessary
+# csh:  setenv VD_GTLCFG Top.siryn_tb.emu_dap_wrapper.vd_jtag_bfm_t32
+# bash: export VD_GTLCFG=Top.siryn_tb.emu_dap_wrapper.vd_jtag_bfm_t32
+
+bindto 0.0.0.0
+#debug_level 3
+
+if { [info exists env(OCD_GDB_PORT)] } {
+	gdb_port $::env(OCD_GDB_PORT)
+}
+
+if { [info exists env(OCD_TELNET_PORT)] } {
+	telnet_port $::env(OCD_TELNET_PORT)
+}
+
+if { [info exists env(OCD_TCL_PORT)] } {
+	tcl_port $::env(OCD_TCL_PORT)
+}
+
+if { [info exists env(OCD_VDEBUG_PORT)] } {
+	set VDEBUGPORT $::env(OCD_VDEBUG_PORT)
+}
+
+#
+# Interface Configuration
+#
+
+if { ![info exists VDEBUGPORT] } {
+	echo "ERROR: VDEBUGPORT must be specified"
+	shutdown
+}
+
+source [find interface/vdebug.cfg]
+
+# BFM hierarchical path and input clk period
+if { ![info exists env(VD_GTLCFG)] } {
+	vdebug bfm_path Top.siryn_tb.emu_dap_wrapper.vd_jtag_bfm_t32 295ps
+} else {
+	vdebug bfm_path $::env(VD_GTLCFG) 295ps
+}
+
+#
+# Board (Platform) Configuration
+#
+
+if { ![info exists JTAGFREQ] } {
+	set JTAGFREQ 50000
+}
+
+source [find board/ampere_ac03_2s.cfg]
-- 
2.25.1

